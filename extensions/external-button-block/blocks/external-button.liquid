{% comment %} --- External Button Block --- {% endcomment %}
{% comment %} Block for displaying external affiliate buttons {% endcomment %}

{% comment %} --- Fetching Metafields values --- {% endcomment %}
{% assign ns = "bl_custom_button" %}

{% comment %} --- Support both old and new format --- {% endcomment %}
{% assign mf_external_links = product.metafields[ns].external_links %}
{% assign mf_hide_atc = product.metafields[ns].hide_atc %}

{% comment %} --- Legacy format support --- {% endcomment %}
{% assign mf_external_url = product.metafields[ns].external_url %}
{% assign mf_button_text = product.metafields[ns].button_text %}
{% assign mf_is_enabled = product.metafields[ns].is_enabled %}

{% comment %} --- Check for links or hide_atc setting --- {% endcomment %}
{% assign has_new_format = false %}
{% assign has_legacy_format = false %}

{% if mf_external_links.value != blank %}
  {% assign has_new_format = true %}
{% elsif mf_hide_atc.value == "true" %}
  {% comment %} --- Show container even with empty links if hide_atc is enabled --- {% endcomment %}
  {% assign has_new_format = true %}
{% endif %}

{% if mf_external_url.value != blank and mf_button_text.value != blank %}
  {% if mf_is_enabled.value == true or mf_is_enabled.value == "true" %}
    {% assign has_legacy_format = true %}
  {% endif %}
{% endif %}

{% if has_new_format %}
  {% comment %} --- New format: Use external_links JSON directly --- {% endcomment %}
  <div class="custom-external-button-container" 
       data-product-id="{{ product.id | escape }}"
       data-atc-override-selector="{{ block.settings.atc_selector_override | strip | escape }}"
       data-hide-atc="{{ mf_hide_atc.value | default: 'false' | escape }}"
       data-external-links="{{ mf_external_links.value | default: '[]' | escape }}"
       data-timestamp="{{ 'now' | date: '%s' | escape }}"
       data-block-button-preset="{{ block.settings.button_preset | default: 'primary_medium' | strip | escape }}"
       data-block-custom-bg-color="{{ block.settings.custom_bg_color | strip | escape }}"
       data-block-custom-text-color="{{ block.settings.custom_text_color | strip | escape }}"

       data-block-show-tracking-notice="{{ block.settings.show_tracking_notice | default: false | escape }}"
       data-block-tracking-notice-text="{{ block.settings.tracking_notice_text | default: 'This is an affiliate link - we may earn a commission' | strip | escape }}"
       {{ block.shopify_attributes }}>
    
    {% comment %} --- Buttons will be rendered by JavaScript --- {% endcomment %}
    <div id="external-buttons-{{ product.id }}" class="external-buttons-container"></div>
  </div>

{% elsif has_legacy_format %}
  {% comment %} --- Legacy format: single button --- {% endcomment %}
  <div class="custom-external-button-container" 
       data-product-id="{{ product.id | escape }}"
       data-atc-override-selector="{{ block.settings.atc_selector_override | strip | escape }}"
       data-hide-atc="{{ mf_hide_atc.value | default: 'false' | escape }}"
       {{ block.shopify_attributes }}>
    
    <button type="button" 
            class="external-link-button {{ block.settings.button_style_class | strip | escape }}"
            data-external-url="{{ mf_external_url.value | strip | escape }}"
            role="button"
            aria-label="Open external link: {{ mf_button_text.value | strip | escape }}">
      <span class="button-text">
        <span>{{ mf_button_text.value | strip | escape }}</span>
      </span>
    </button>

    <script>
      // Use event delegation instead of inline onclick
      document.addEventListener('DOMContentLoaded', function() {
        const legacyButton = document.querySelector('[data-external-url="{{ mf_external_url.value | strip | escape }}"]');
        if (legacyButton && typeof CustomButtonScript !== 'undefined') {
          legacyButton.addEventListener('click', function(event) {
            event.preventDefault();
            CustomButtonScript.handleExternalClick(this);
          });
        }
      });
    </script>

    {% comment %} --- Tracking notice (optional) --- {% endcomment %}
    {% if block.settings.show_tracking_notice %}
      <small class="external-link-notice" style="display: block; margin-top: 5px; color: #666; font-size: 0.8em;">
        {{ block.settings.tracking_notice_text | default: "This is an affiliate link - we may earn a commission" }}
      </small>
    {% endif %}
  </div>

{% elsif request.design_mode %}
  {% comment %} --- Message in theme editor --- {% endcomment %}
  <div class="external-button-placeholder" style="background: #fff3cd; border: 1px solid #ffeaa7; padding: 15px; border-radius: 4px; text-align: center;">
    <h4 style="margin: 0 0 10px 0; color: #856404;">⚙️ External button not configured</h4>
    
    <p style="margin: 5px 0; color: #856404;">
      <strong>Step 1:</strong> Go to the "DC External Links" app and configure external links for this product.
    </p>
    
    <p style="margin: 10px 0 5px 0; font-size: 0.9em; color: #856404;">
      <strong>Instructions:</strong><br>
      1. Install the "DC External Links" app<br>
      2. Configure product in the app<br>
      3. Enable at least one link<br>
      4. This message will disappear after configuration
    </p>
    
    <div style="margin-top: 10px;">
      <a href="/admin/apps" 
         style="background: #007bff; color: white; padding: 8px 16px; text-decoration: none; border-radius: 4px; display: inline-block;">
        Open Apps
      </a>
    </div>
  </div>
{% endif %}

{% comment %} --- Loading script --- {% endcomment %}
<script src="{{ 'custom_button.js' | asset_url }}" defer></script>

{% comment %} --- CSS Styles --- {% endcomment %}
<style>
  /* Base button styles - use more specific selectors to avoid conflicts */
  .custom-external-button-container .external-link-button {
    box-sizing: border-box !important;
    cursor: pointer !important;
    text-decoration: none !important;
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
    position: relative !important;
    transition: all 0.3s ease-in-out !important;
    width: 100% !important;
    line-height: 1.2 !important;
    text-transform: uppercase !important;
    font-weight: 500 !important;
    letter-spacing: 0.1rem !important;
    border-radius: 4px !important;
    border: 1px solid !important;
    margin: 0 !important;
    outline: none !important;
    -webkit-appearance: none !important;
    -moz-appearance: none !important;
    appearance: none !important;
  }

  /* Focus styles for accessibility */
  .custom-external-button-container .external-link-button:focus {
    outline: 2px solid #005fcc !important;
    outline-offset: 2px !important;
  }

  .custom-external-button-container .external-link-button:focus:not(:focus-visible) {
    outline: none !important;
  }
  
  /* Preset styles */
  {% assign preset = block.settings.button_preset | default: 'primary_medium' %}
  {% assign preset_parts = preset | split: '_' %}
  {% assign preset_style = preset_parts.first %}
  {% assign preset_size = preset_parts.last %}
  
  /* Size variants */
  {% case preset_size %}
    {% when 'small' %}
      .custom-external-button-container .external-link-button {
        padding: 0.8rem 1.6rem !important;
        font-size: 1.2rem !important;
        min-height: 3.6rem !important;
      }
    {% when 'large' %}
      .custom-external-button-container .external-link-button {
        padding: 2rem 3rem !important;
        font-size: 1.6rem !important;
        min-height: 5.2rem !important;
      }
    {% else %}
      .custom-external-button-container .external-link-button {
        padding: 1.5rem 2rem !important;
        font-size: 1.4rem !important;
        min-height: 4.4rem !important;
      }
  {% endcase %}
  
  /* Style variants */
  {% case preset_style %}
    {% when 'primary' %}
      .custom-external-button-container .external-link-button {
        background: rgb(var(--color-button)) !important;
        color: rgb(var(--color-button-text)) !important;
        border-color: rgb(var(--color-button)) !important;
      }
      .custom-external-button-container .external-link-button:hover {
        background: rgb(var(--color-button-hover, var(--color-button))) !important;
        color: rgb(var(--color-button-text-hover, var(--color-button-text))) !important;
        border-color: rgb(var(--color-button-hover, var(--color-button))) !important;
        transform: translateY(-2px) !important;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15) !important;
      }
    {% when 'secondary' %}
      .custom-external-button-container .external-link-button {
        background: transparent !important;
        color: rgb(var(--color-foreground)) !important;
        border-color: rgb(var(--color-foreground)) !important;
      }
      .custom-external-button-container .external-link-button:hover {
        background: rgb(var(--color-foreground)) !important;
        color: rgb(var(--color-background)) !important;
        border-color: rgb(var(--color-foreground)) !important;
        transform: translateY(-2px) !important;
      }
    {% when 'outline' %}
      .custom-external-button-container .external-link-button {
        background: transparent !important;
        color: rgb(var(--color-button)) !important;
        border-color: rgb(var(--color-button)) !important;
      }
      .custom-external-button-container .external-link-button:hover {
        background: rgb(var(--color-button)) !important;
        color: rgb(var(--color-button-text));
        border-color: rgb(var(--color-button));
        transform: translateY(-2px);
      }
    {% when 'ghost' %}
      .external-link-button {
        background: transparent;
        color: rgb(var(--color-foreground));
        border-color: transparent;
      }
      .external-link-button:hover {
        background: rgba(var(--color-foreground), 0.1);
        color: rgb(var(--color-foreground));
        transform: scale(1.02);
      }
    {% when 'custom' %}
      .external-link-button {
        {% if block.settings.custom_bg_color != blank %}
          background: {{ block.settings.custom_bg_color }};
        {% else %}
          background: rgb(var(--color-button));
        {% endif %}
        {% if block.settings.custom_text_color != blank %}
          color: {{ block.settings.custom_text_color }};
        {% else %}
          color: rgb(var(--color-button-text));
        {% endif %}
        {% if block.settings.custom_bg_color != blank %}
          border-color: {{ block.settings.custom_bg_color }};
        {% else %}
          border-color: rgb(var(--color-button));
        {% endif %}
      }
      .external-link-button:hover {
        filter: brightness(1.1);
        transform: translateY(-2px);
      }
    {% else %}
      .external-link-button {
        background: rgb(var(--color-button));
        color: rgb(var(--color-button-text));
        border-color: rgb(var(--color-button));
      }
      .external-link-button:hover {
        background: rgb(var(--color-button-hover, var(--color-button)));
        color: rgb(var(--color-button-text-hover, var(--color-button-text)));
        border-color: rgb(var(--color-button-hover, var(--color-button)));
        transform: translateY(-2px);
      }
  {% endcase %}
  
  .external-link-button:active {
    transform: translateY(0);
    {% if block.settings.enable_shadow %}
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    {% endif %}
  }
  
  .external-link-button:focus {
    outline: 0.2rem solid rgb(var(--color-outline-button));
    outline-offset: 0.3rem;
    box-shadow: 0 0 0 0.3rem rgb(var(--color-background)),
                0 0 0.5rem 0.4rem rgb(var(--color-outline-button));
  }
  
  /* Button text container */
  .custom-external-button-container .external-link-button .button-text {
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
    width: 100% !important;
    text-align: center !important;
    gap: 8px !important;
    position: relative !important;
  }
  
  /* Center text inside buttons */
  .custom-external-button-container .external-link-button {
    text-align: center !important;
  }
  
  /* Text span should be centered */
  .custom-external-button-container .external-link-button .button-text > span {
    text-align: center !important;
  }
    gap: 0.8rem !important;
  }
  
  .custom-external-button-container .external-link-button .button-text > span {
    flex: none !important;
  }

  /* Custom style support */
  {% if block.settings.button_preset == 'custom' %}
    .custom-external-button-container .external-link-button {
      {% if block.settings.custom_bg_color != blank %}
        background: {{ block.settings.custom_bg_color | escape }} !important;
        border-color: {{ block.settings.custom_bg_color | escape }} !important;
      {% endif %}
      {% if block.settings.custom_text_color != blank %}
        color: {{ block.settings.custom_text_color | escape }} !important;
      {% endif %}
    }
    .custom-external-button-container .external-link-button:hover {
      {% if block.settings.custom_bg_color != blank %}
        background: {{ block.settings.custom_bg_color | color_darken: 10 | escape }} !important;
        border-color: {{ block.settings.custom_bg_color | color_darken: 10 | escape }} !important;
      {% endif %}
      transform: translateY(-2px) !important;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15) !important;
    }
  {% endif %}
  
  /* Responsive adjustments */
  @media screen and (max-width: 749px) {
    {% case preset_size %}
      {% when 'small' %}
        .external-link-button {
          padding: 0.6rem 1.2rem;
          font-size: 1.1rem;
          min-height: 3.2rem;
        }
      {% when 'large' %}
        .external-link-button {
          padding: 1.6rem 2.4rem;
          font-size: 1.4rem;
          min-height: 4.8rem;
        }
      {% else %}
        .external-link-button {
          padding: 1.2rem 1.6rem;
          font-size: 1.3rem;
          min-height: 4rem;
        }
    {% endcase %}
    

  }
  
  /* Container spacing */
  .custom-external-button-container {
    margin: 1rem 0;
  }
  
  .external-buttons-container {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }
  
  /* Notice styling */
  .custom-external-button-container .external-link-notice {
    opacity: 0.8 !important;
    font-style: italic !important;
    margin-top: 5px !important;
    color: #666 !important;
    font-size: 0.8em !important;
    text-align: center !important;
    display: block !important;
  }
  
    /* Loading state */
  .custom-external-button-container .external-link-button.loading {
    opacity: 0.7 !important;
    pointer-events: none !important;
  }

  .custom-external-button-container .external-link-button.loading::after {
    content: '' !important;
    position: absolute !important;
    top: 50% !important;
    left: 50% !important;
    width: 20px !important;
    height: 20px !important;
    margin: -10px 0 0 -10px !important;
    border: 2px solid transparent !important;
    border-top: 2px solid currentColor !important;
    border-radius: 50% !important;
    animation: spin 1s linear infinite !important;
  }
  
  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
  
  .external-button-placeholder {
    max-width: 50rem;
    margin: 2rem auto;
    font-size: 1.4rem;
    line-height: 1.6;
  }
  
  .external-button-placeholder h4 {
    font-size: 1.8rem;
    font-weight: 600;
  }
  
  .external-button-placeholder a {
    font-size: 1.4rem;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.1rem;
    min-height: 4rem;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    transition: all 0.15s ease-in-out;
  }
  
  .external-button-placeholder a:hover {
    transform: translateY(-0.1rem);
    box-shadow: 0 0.2rem 0.4rem rgba(0, 0, 0, 0.1);
  }
  
  /* Responsiveness */
  @media screen and (max-width: 749px) {
    .external-link-button {
      font-size: 1.3rem;
      padding: 1.3rem 1.8rem !important;
      min-height: 4rem;
    }
    

  }
  
  @media screen and (max-width: 550px) {
    .external-link-button {
      font-size: 1.2rem;
      padding: 1.2rem 1.5rem !important;
      min-height: 3.8rem;
    }
  }
  
  /* Accessibility improvements */
  @media (prefers-reduced-motion: reduce) {
    .external-link-button {
      transition: none;
    }
  }
  
  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .external-link-button {
      border-width: 0.2rem;
    }
  }
</style>

{% schema %}
{
  "name": "External Button",
  "target": "section",
  "settings": [
    {
      "type": "header",
      "content": "Button Appearance"
    },
    {
      "type": "select",
      "id": "button_preset",
      "label": "Button Preset",
      "default": "primary_medium",
      "options": [
        { "value": "primary_small", "label": "Primary - Small" },
        { "value": "primary_medium", "label": "Primary - Medium" },
        { "value": "primary_large", "label": "Primary - Large" },
        { "value": "secondary_small", "label": "Secondary - Small" },
        { "value": "secondary_medium", "label": "Secondary - Medium" },
        { "value": "secondary_large", "label": "Secondary - Large" },
        { "value": "outline_small", "label": "Outline - Small" },
        { "value": "outline_medium", "label": "Outline - Medium" },
        { "value": "outline_large", "label": "Outline - Large" },
        { "value": "ghost_small", "label": "Ghost - Small" },
        { "value": "ghost_medium", "label": "Ghost - Medium" },
        { "value": "ghost_large", "label": "Ghost - Large" },
        { "value": "custom", "label": "Custom Style" }
      ],
      "info": "Choose a preset style or select 'Custom' for full control"
    },
    {
      "type": "color",
      "id": "custom_bg_color",
      "label": "Custom Background Color",
      "info": "Only used with 'Custom Style' preset"
    },
    {
      "type": "color",
      "id": "custom_text_color",
      "label": "Custom Text Color",
      "info": "Only used with 'Custom Style' preset"
    },

    {
      "type": "header",
      "content": "Affiliate Link Notice"
    },
    {
      "type": "checkbox",
      "id": "show_tracking_notice",
      "label": "Show affiliate link notice",
      "default": false,
      "info": "Displays notice text below buttons to comply with affiliate disclosure requirements"
    },
    {
      "type": "textarea",
      "id": "tracking_notice_text",
      "label": "Notice Text",
      "default": "This is an affiliate link - we may earn a commission",
      "info": "Displayed below button if notice is enabled. Keep it short and clear."
    },
    {
      "type": "header",
      "content": "Advanced Settings"
    },
    {
      "type": "text",
      "id": "atc_selector_override",
      "label": "Custom Add-to-Cart Selector",
      "info": "Override default selectors for hiding Add-to-Cart buttons. Leave empty to use defaults. Example: .my-custom-atc-button"
    }
  ]
}
{% endschema %}